import "@ant-design/v5-patch-for-react-19";
import "./globals.css";
import "swiper/css";
import "swiper/css/pagination";
import "swiper/css/navigation";
import { config } from "@fortawesome/fontawesome-svg-core";
import "@fortawesome/fontawesome-svg-core/styles.css";
config.autoAddCss = false;
import type { Metadata } from "next";
import LocalFont from "next/font/local";
import { setRequestLocale } from "next-intl/server";
import { routing } from "@/i18n/routing";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import AppWrapper from "@/components/AppWrapper";

const GothamPro = LocalFont({
  src: [
    {
      path: "./../../public/fonts/gotham-pro-light.ttf",
      weight: "300",
      style: "normal",
    },
    {
      path: "./../../public/fonts/gotham-pro-normal.ttf",
      weight: "400",
      style: "normal",
    },
    {
      path: "./../../public/fonts/gotham-pro-medium.ttf",
      weight: "500",
      style: "normal",
    },
    {
      path: "./../../public/fonts/gotham-pro-bold.ttf",
      weight: "700",
      style: "normal",
    },
  ],
  variable: "--font-gotham-pro",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  setRequestLocale(locale);

  return (
    <html
      suppressHydrationWarning
      lang={locale}
      className={`${GothamPro.variable} min-h-screen`}
    >
      <body
        className={`font-gothamPro text-base text-dark flex flex-col min-h-screen`}
      >
        <NextIntlClientProvider>
          <AppWrapper>{children}</AppWrapper>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
